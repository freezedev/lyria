#!/usr/bin/env node

var packageFile = require('../package.json');
var program = require('commander');
var fs = require('fs');
var path = require('path');
var hound = require('hound');

var createAssetArray = require('./createassetarray').createAssetArray;
var prepareScenes = require('./preparescenes').prepareScenes;

var isValidProject = function(dir) {
  return fs.existsSync(path.join(dir, 'assets'));
};

var buildProject = function(dir, callback) {
  if (isValidProject(dir)) {
    createAssetArray(dir, function() {
      prepareScenes(path.join(dir, 'assets', 'scenes'), path.join(dir, 'js', 'scenes.js'), function() {
        console.log('Project built');
      
        if (callback) {
          callback();
        }
      });    
    });
  }
};

var watchProject = function(dir) {
  if (isValidProject(dir)) {
    watcher = hound.watch(path.join(dir, 'assets'));
    
    console.log('Valid lyria project found at ' + dir + '. Watching for changes...');
    
    var watchArray = ['create', 'change', 'delete'];
    for (var i = 0, j = watchArray.length; i < j; i++) {
      (function(iterator) {
        watcher.on(iterator, function(file) {
          console.log('Change detected at ' + file + '. Rebuilding project...');
          watcher.clear();
          buildProject(dir, function() {
            watchProject(dir);
          });
        });
      })(watchArray[i]);
    }
    
  }
};

program
  .version(packageFile.version)
  .option('--build <dir>', 'Build Lyria project', buildProject)
  .option('--watch <dir>', 'Watch for changes and rebuild instantly', watchProject)
  .option('--create <projectname> <dir>', 'Create a new Lyria project')
  .parse(process.argv);
  
